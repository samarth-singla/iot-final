{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMARTH\\\\OneDrive\\\\Desktop\\\\iot 3\\\\IoT-Main\\\\frontend\\\\src\\\\components\\\\PatientDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { getPatientVitals, downloadThingSpeakDataAsCSV } from '../services/ThingSpeakService';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport 'leaflet/dist/leaflet.css';\nimport './PatientDetail.css';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nconst PatientDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [patientData, setPatientData] = useState(null);\n  const [patientDetails, setPatientDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [manualAlertLevel, setManualAlertLevel] = useState(null);\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  // ECG Chart configuration\n  const ecgChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'ECG Waveform'\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Sample'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'mV'\n        }\n      }\n    },\n    animation: false // Disable animation for better performance\n  };\n  const prepareEcgChartData = samples => ({\n    labels: samples.map((_, index) => index),\n    datasets: [{\n      label: 'ECG',\n      data: samples,\n      borderColor: 'rgb(75, 192, 192)',\n      borderWidth: 1,\n      pointRadius: 0,\n      tension: 0.1\n    }]\n  });\n\n  // Fetch patient details from backend\n  useEffect(() => {\n    const fetchPatientDetails = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch patient details');\n        }\n        const patients = await response.json();\n        const currentPatient = patients.find(patient => patient.unique_id.toString() === id.toString());\n        if (currentPatient) {\n          setPatientDetails(currentPatient);\n        } else {\n          console.warn(`Patient with ID ${id} not found in patients list`);\n        }\n      } catch (error) {\n        console.error(\"Error fetching patient details:\", error);\n      }\n    };\n    fetchPatientDetails();\n  }, [id]);\n  const fetchVitals = useCallback(async () => {\n    if (!id) return;\n    try {\n      const vitalsData = await getPatientVitals(id);\n      setPatientData(prev => ({\n        ...prev,\n        ...vitalsData\n      }));\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching vitals:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    fetchVitals();\n    const interval = setInterval(fetchVitals, 30000);\n    return () => clearInterval(interval);\n  }, [fetchVitals]);\n\n  // Function to handle manual alert setting\n  const handleSetAlert = level => {\n    if (manualAlertLevel === level) {\n      // If clicking the same level again, clear the alert\n      setManualAlertLevel(null);\n    } else {\n      // Set to the selected level\n      setManualAlertLevel(level);\n    }\n  };\n\n  // Handle CSV download\n  const handleDownloadCSV = async () => {\n    if (!id) return;\n    try {\n      setIsDownloading(true);\n      await downloadThingSpeakDataAsCSV(id, `patient_${id}_data_${new Date().toISOString().slice(0, 10)}.csv`, 7 // Get 7 days of data\n      );\n      setIsDownloading(false);\n    } catch (error) {\n      console.error('Error downloading CSV data:', error);\n      setIsDownloading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading patient data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Error loading patient data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 79\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 21\n  }, this);\n  if (!patientData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: \"No patient data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 28\n  }, this);\n\n  // Helper function to determine temperature status\n  const getTemperatureStatus = temp => {\n    if (temp > 37.8) return 'elevated';\n    if (temp < 35.5) return 'low';\n    return 'normal';\n  };\n\n  // Helper function to determine heart rate status\n  const getHeartRateStatus = hr => {\n    if (hr > 100) return 'elevated';\n    if (hr < 60) return 'low';\n    return 'normal';\n  };\n\n  // Helper function to get alert style class\n  const getAlertClass = alertLevel => {\n    switch (alertLevel) {\n      case 0:\n        return 'normal';\n      case 1:\n        return 'moderate-risk';\n      case 2:\n        return 'high-risk';\n      default:\n        return 'normal';\n    }\n  };\n\n  // Function to get patient initials for avatar\n  const getInitials = name => {\n    if (!name) return \"P\";\n    return name.split(' ').map(part => part[0]).join('').toUpperCase().substring(0, 2);\n  };\n\n  // Determine effective alert level (manual override or data-driven)\n  const effectiveAlertLevel = manualAlertLevel !== null ? manualAlertLevel : patientData.vitals.alertLevel;\n  const alertStatusText = effectiveAlertLevel === 0 ? \"Normal\" : effectiveAlertLevel === 1 ? \"Moderate Risk\" : \"High Risk\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-detail\",\n    children: [effectiveAlertLevel > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `emergency-alert ${getAlertClass(effectiveAlertLevel)}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: effectiveAlertLevel === 1 ? 'MODERATE RISK ALERT' : 'HIGH RISK ALERT'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: effectiveAlertLevel === 1 ? 'Patient shows moderate risk signs. Monitor carefully.' : 'EMERGENCY! Patient shows high risk signs. Immediate attention required!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), manualAlertLevel !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manual-alert-indicator\",\n        children: \"Manually set by doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-info-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient-info-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"initials\",\n            children: patientDetails ? getInitials(patientDetails.name) : \"P\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-basic-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: patientDetails ? patientDetails.name : `Patient #${id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: \"Patient ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value\",\n                children: patientDetails ? patientDetails.unique_id : id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value\",\n                children: patientDetails ? `${patientDetails.age} years` : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value\",\n                children: patientDetails ? patientDetails.phone_number : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `value status ${effectiveAlertLevel > 0 ? effectiveAlertLevel === 1 ? 'warning' : 'critical' : 'normal'}`,\n                children: alertStatusText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manual-alert-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manual Alert Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `alert-btn moderate-risk ${manualAlertLevel === 1 ? 'active' : ''}`,\n          onClick: () => handleSetAlert(1),\n          children: \"Set Moderate Risk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `alert-btn high-risk ${manualAlertLevel === 2 ? 'active' : ''}`,\n          onClick: () => handleSetAlert(2),\n          children: \"Set High Risk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), manualAlertLevel !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"alert-btn clear\",\n          onClick: () => setManualAlertLevel(null),\n          children: \"Clear Alert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"alert-info\",\n        children: \"Use these buttons to manually set an alert level if you observe concerning symptoms not detected by sensors.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vital-signs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vital-signs-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vital Signs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `download-csv-btn ${isDownloading ? 'loading' : ''}`,\n          onClick: handleDownloadCSV,\n          disabled: isDownloading,\n          children: isDownloading ? 'Downloading...' : 'Download Historical Data (CSV)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vitals-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `value ${getTemperatureStatus(patientData.vitals.temperature)}`,\n            children: [patientData.vitals.temperature, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Emergency Alert Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `value ${getAlertClass(effectiveAlertLevel)}`,\n            children: [alertStatusText, manualAlertLevel !== null && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"manual-indicator\",\n              children: \" (Manual)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Heart Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `value ${getHeartRateStatus(patientData.vitals.heartRate)}`,\n            children: [patientData.vitals.heartRate, \" BPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"SpO2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `value ${patientData.vitals.spo2 < 95 ? 'low' : 'normal'}`,\n            children: [patientData.vitals.spo2, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Blood Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `value ${patientData.status.bp}`,\n            children: [patientData.vitals.bp.systolic, \"/\", patientData.vitals.bp.diastolic, \" mmHg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Average ECG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: [typeof patientData.vitals.avgEcg === 'number' ? patientData.vitals.avgEcg.toFixed(2) : patientData.vitals.avgEcg, \" mV\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), patientData.location.lat && patientData.location.lng && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card location-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Lat: \", patientData.location.lat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Long: \", patientData.location.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ecg-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ECG Waveform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ecg-chart-container\",\n        children: patientData.vitals.ecgSamples.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n          options: ecgChartOptions,\n          data: prepareEcgChartData(patientData.vitals.ecgSamples)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No ECG data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), patientData.location.lat && patientData.location.lng && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [patientData.location.lat, patientData.location.lng],\n          zoom: 13,\n          style: {\n            height: '400px',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [patientData.location.lat, patientData.location.lng],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [\"Patient's Location\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 37\n              }, this), \"Lat: \", patientData.location.lat, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 50\n              }, this), \"Long: \", patientData.location.lng]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Updated: \", patientData.lastUpdated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientDetail, \"aeEzT8ksXC/E7Z5POWROerI85Tk=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetail;\nexport default PatientDetail;\nvar _c;\n$RefreshReg$(_c, \"PatientDetail\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","Line","MapContainer","TileLayer","Marker","Popup","getPatientVitals","downloadThingSpeakDataAsCSV","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","L","icon","iconShadow","jsxDEV","_jsxDEV","register","DefaultIcon","iconUrl","shadowUrl","iconSize","iconAnchor","prototype","options","PatientDetail","_s","id","patientData","setPatientData","patientDetails","setPatientDetails","loading","setLoading","error","setError","manualAlertLevel","setManualAlertLevel","isDownloading","setIsDownloading","ecgChartOptions","responsive","plugins","legend","display","title","text","scales","x","y","animation","prepareEcgChartData","samples","labels","map","_","index","datasets","label","data","borderColor","borderWidth","pointRadius","tension","fetchPatientDetails","response","fetch","ok","Error","patients","json","currentPatient","find","patient","unique_id","toString","console","warn","fetchVitals","vitalsData","prev","message","interval","setInterval","clearInterval","handleSetAlert","level","handleDownloadCSV","Date","toISOString","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getTemperatureStatus","temp","getHeartRateStatus","hr","getAlertClass","alertLevel","getInitials","name","split","part","join","toUpperCase","substring","effectiveAlertLevel","vitals","alertStatusText","age","phone_number","onClick","disabled","temperature","heartRate","spo2","status","bp","systolic","diastolic","avgEcg","toFixed","location","lat","lng","ecgSamples","length","center","zoom","style","height","width","url","attribution","position","lastUpdated","_c","$RefreshReg$"],"sources":["C:/Users/SAMARTH/OneDrive/Desktop/iot 3/IoT-Main/frontend/src/components/PatientDetail.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { getPatientVitals, downloadThingSpeakDataAsCSV } from '../services/ThingSpeakService';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport L from 'leaflet';\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './PatientDetail.css';\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst DefaultIcon = L.icon({\r\n  iconUrl: icon,\r\n  shadowUrl: iconShadow,\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41]\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nconst PatientDetail = () => {\r\n  const { id } = useParams();\r\n  const [patientData, setPatientData] = useState(null);\r\n  const [patientDetails, setPatientDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [manualAlertLevel, setManualAlertLevel] = useState(null);\r\n  const [isDownloading, setIsDownloading] = useState(false);\r\n\r\n  // ECG Chart configuration\r\n  const ecgChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'ECG Waveform'\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Sample'\r\n        }\r\n      },\r\n      y: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'mV'\r\n        }\r\n      }\r\n    },\r\n    animation: false // Disable animation for better performance\r\n  };\r\n\r\n  const prepareEcgChartData = (samples) => ({\r\n    labels: samples.map((_, index) => index),\r\n    datasets: [\r\n      {\r\n        label: 'ECG',\r\n        data: samples,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        borderWidth: 1,\r\n        pointRadius: 0,\r\n        tension: 0.1\r\n      }\r\n    ]\r\n  });\r\n\r\n  // Fetch patient details from backend\r\n  useEffect(() => {\r\n    const fetchPatientDetails = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch patient details');\r\n        }\r\n        \r\n        const patients = await response.json();\r\n        const currentPatient = patients.find(patient => patient.unique_id.toString() === id.toString());\r\n        \r\n        if (currentPatient) {\r\n          setPatientDetails(currentPatient);\r\n        } else {\r\n          console.warn(`Patient with ID ${id} not found in patients list`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching patient details:\", error);\r\n      }\r\n    };\r\n    \r\n    fetchPatientDetails();\r\n  }, [id]);\r\n\r\n  const fetchVitals = useCallback(async () => {\r\n    if (!id) return;\r\n\r\n    try {\r\n      const vitalsData = await getPatientVitals(id);\r\n      setPatientData(prev => ({\r\n        ...prev,\r\n        ...vitalsData\r\n      }));\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching vitals:', error);\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    fetchVitals();\r\n    const interval = setInterval(fetchVitals, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchVitals]);\r\n\r\n  // Function to handle manual alert setting\r\n  const handleSetAlert = (level) => {\r\n    if (manualAlertLevel === level) {\r\n      // If clicking the same level again, clear the alert\r\n      setManualAlertLevel(null);\r\n    } else {\r\n      // Set to the selected level\r\n      setManualAlertLevel(level);\r\n    }\r\n  };\r\n\r\n  // Handle CSV download\r\n  const handleDownloadCSV = async () => {\r\n    if (!id) return;\r\n    \r\n    try {\r\n      setIsDownloading(true);\r\n      await downloadThingSpeakDataAsCSV(\r\n        id, \r\n        `patient_${id}_data_${new Date().toISOString().slice(0,10)}.csv`, \r\n        7  // Get 7 days of data\r\n      );\r\n      setIsDownloading(false);\r\n    } catch (error) {\r\n      console.error('Error downloading CSV data:', error);\r\n      setIsDownloading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"loading\">Loading patient data...</div>;\r\n  if (error) return <div className=\"error\"><h3>Error loading patient data</h3><p>{error}</p></div>;\r\n  if (!patientData) return <div className=\"error\">No patient data available</div>;\r\n\r\n  // Helper function to determine temperature status\r\n  const getTemperatureStatus = (temp) => {\r\n    if (temp > 37.8) return 'elevated';\r\n    if (temp < 35.5) return 'low';\r\n    return 'normal';\r\n  };\r\n\r\n  // Helper function to determine heart rate status\r\n  const getHeartRateStatus = (hr) => {\r\n    if (hr > 100) return 'elevated';\r\n    if (hr < 60) return 'low';\r\n    return 'normal';\r\n  };\r\n\r\n  // Helper function to get alert style class\r\n  const getAlertClass = (alertLevel) => {\r\n    switch(alertLevel) {\r\n      case 0: return 'normal';\r\n      case 1: return 'moderate-risk';\r\n      case 2: return 'high-risk';\r\n      default: return 'normal';\r\n    }\r\n  };\r\n\r\n  // Function to get patient initials for avatar\r\n  const getInitials = (name) => {\r\n    if (!name) return \"P\";\r\n    return name\r\n      .split(' ')\r\n      .map(part => part[0])\r\n      .join('')\r\n      .toUpperCase()\r\n      .substring(0, 2);\r\n  };\r\n\r\n  // Determine effective alert level (manual override or data-driven)\r\n  const effectiveAlertLevel = manualAlertLevel !== null ? manualAlertLevel : patientData.vitals.alertLevel;\r\n  const alertStatusText = effectiveAlertLevel === 0 ? \"Normal\" : \r\n                          effectiveAlertLevel === 1 ? \"Moderate Risk\" : \"High Risk\";\r\n\r\n  return (\r\n    <div className=\"patient-detail\">\r\n      {effectiveAlertLevel > 0 && (\r\n        <div className={`emergency-alert ${getAlertClass(effectiveAlertLevel)}`}>\r\n          <h2>\r\n            {effectiveAlertLevel === 1 ? 'MODERATE RISK ALERT' : 'HIGH RISK ALERT'}\r\n          </h2>\r\n          <p>\r\n            {effectiveAlertLevel === 1 \r\n              ? 'Patient shows moderate risk signs. Monitor carefully.' \r\n              : 'EMERGENCY! Patient shows high risk signs. Immediate attention required!'}\r\n          </p>\r\n          {manualAlertLevel !== null && (\r\n            <div className=\"manual-alert-indicator\">Manually set by doctor</div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Patient Info Section */}\r\n      <div className=\"patient-info-section\">\r\n        <div className=\"patient-info-header\">\r\n          <div className=\"patient-avatar\">\r\n            <div className=\"initials\">{patientDetails ? getInitials(patientDetails.name) : \"P\"}</div>\r\n          </div>\r\n          <div className=\"patient-basic-info\">\r\n            <h1>{patientDetails ? patientDetails.name : `Patient #${id}`}</h1>\r\n            <div className=\"info-grid\">\r\n              <div className=\"info-item\">\r\n                <div className=\"label\">Patient ID</div>\r\n                <div className=\"value\">{patientDetails ? patientDetails.unique_id : id}</div>\r\n              </div>\r\n              <div className=\"info-item\">\r\n                <div className=\"label\">Age</div>\r\n                <div className=\"value\">{patientDetails ? `${patientDetails.age} years` : 'N/A'}</div>\r\n              </div>\r\n              <div className=\"info-item\">\r\n                <div className=\"label\">Phone</div>\r\n                <div className=\"value\">{patientDetails ? patientDetails.phone_number : 'N/A'}</div>\r\n              </div>\r\n              <div className=\"info-item\">\r\n                <div className=\"label\">Status</div>\r\n                <div className={`value status ${effectiveAlertLevel > 0 ? \r\n                  effectiveAlertLevel === 1 ? 'warning' : 'critical' : 'normal'}`}>\r\n                  {alertStatusText}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Manual Alert Controls */}\r\n      <div className=\"manual-alert-controls\">\r\n        <h3>Manual Alert Controls</h3>\r\n        <div className=\"alert-buttons\">\r\n          <button \r\n            className={`alert-btn moderate-risk ${manualAlertLevel === 1 ? 'active' : ''}`}\r\n            onClick={() => handleSetAlert(1)}\r\n          >\r\n            Set Moderate Risk\r\n          </button>\r\n          <button \r\n            className={`alert-btn high-risk ${manualAlertLevel === 2 ? 'active' : ''}`}\r\n            onClick={() => handleSetAlert(2)}\r\n          >\r\n            Set High Risk\r\n          </button>\r\n          {manualAlertLevel !== null && (\r\n            <button \r\n              className=\"alert-btn clear\"\r\n              onClick={() => setManualAlertLevel(null)}\r\n            >\r\n              Clear Alert\r\n            </button>\r\n          )}\r\n        </div>\r\n        <p className=\"alert-info\">\r\n          Use these buttons to manually set an alert level if you observe concerning symptoms not detected by sensors.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"vital-signs\">\r\n        <div className=\"vital-signs-header\">\r\n          <h2>Vital Signs</h2>\r\n          <button \r\n            className={`download-csv-btn ${isDownloading ? 'loading' : ''}`}\r\n            onClick={handleDownloadCSV}\r\n            disabled={isDownloading}\r\n          >\r\n            {isDownloading ? 'Downloading...' : 'Download Historical Data (CSV)'}\r\n          </button>\r\n        </div>\r\n        <div className=\"vitals-grid\">\r\n          <div className=\"vital-card\">\r\n            <h3>Temperature</h3>\r\n            <p className={`value ${getTemperatureStatus(patientData.vitals.temperature)}`}>\r\n              {patientData.vitals.temperature}°C\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"vital-card\">\r\n            <h3>Emergency Alert Status</h3>\r\n            <p className={`value ${getAlertClass(effectiveAlertLevel)}`}>\r\n              {alertStatusText}\r\n              {manualAlertLevel !== null && <span className=\"manual-indicator\"> (Manual)</span>}\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"vital-card\">\r\n            <h3>Heart Rate</h3>\r\n            <p className={`value ${getHeartRateStatus(patientData.vitals.heartRate)}`}>\r\n              {patientData.vitals.heartRate} BPM\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"vital-card\">\r\n            <h3>SpO2</h3>\r\n            <p className={`value ${patientData.vitals.spo2 < 95 ? 'low' : 'normal'}`}>\r\n              {patientData.vitals.spo2}%\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"vital-card\">\r\n            <h3>Blood Pressure</h3>\r\n            <p className={`value ${patientData.status.bp}`}>\r\n              {patientData.vitals.bp.systolic}/{patientData.vitals.bp.diastolic} mmHg\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"vital-card\">\r\n            <h3>Average ECG</h3>\r\n            <p className=\"value\">\r\n              {typeof patientData.vitals.avgEcg === 'number' \r\n                ? patientData.vitals.avgEcg.toFixed(2) \r\n                : patientData.vitals.avgEcg} mV\r\n            </p>\r\n          </div>\r\n\r\n          {patientData.location.lat && patientData.location.lng && (\r\n            <div className=\"vital-card location-card\">\r\n              <h3>Location</h3>\r\n              <p>Lat: {patientData.location.lat}</p>\r\n              <p>Long: {patientData.location.lng}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* ECG Graph Section */}\r\n      <div className=\"ecg-section\">\r\n        <h2>ECG Waveform</h2>\r\n        <div className=\"ecg-chart-container\">\r\n          {patientData.vitals.ecgSamples.length > 0 ? (\r\n            <Line\r\n              options={ecgChartOptions}\r\n              data={prepareEcgChartData(patientData.vitals.ecgSamples)}\r\n            />\r\n          ) : (\r\n            <p>No ECG data available</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      {patientData.location.lat && patientData.location.lng && (\r\n        <div className=\"map-section\">\r\n          <h2>Patient Location</h2>\r\n          <div className=\"map-container\">\r\n            <MapContainer\r\n              center={[patientData.location.lat, patientData.location.lng]}\r\n              zoom={13}\r\n              style={{ height: '400px', width: '100%' }}\r\n            >\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n              />\r\n              <Marker position={[patientData.location.lat, patientData.location.lng]}>\r\n                <Popup>\r\n                  Patient's Location<br />\r\n                  Lat: {patientData.location.lat}<br />\r\n                  Long: {patientData.location.lng}\r\n                </Popup>\r\n              </Marker>\r\n            </MapContainer>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"update-info\">\r\n        <p>Last Updated: {patientData.lastUpdated}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDetail;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}