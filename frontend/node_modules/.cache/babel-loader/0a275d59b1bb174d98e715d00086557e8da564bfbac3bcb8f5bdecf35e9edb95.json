{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMARTH\\\\OneDrive\\\\Desktop\\\\iot ujj\\\\IoT-Main\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Link, Routes, Route, useNavigate } from 'react-router-dom';\nimport PatientDetail from './PatientDetail';\nimport AddPatientPage from './AddPatientPage';\nimport './Dashboard.css';\n\n// For demo purposes: Get a simulated alert level based on patient unique_id\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getSimulatedAlertLevel = patientId => {\n  // Convert ID to string then to number for consistency\n  const idNum = parseInt(patientId.toString());\n\n  // Use modulo to get values 0, 1, 2\n  // IDs ending with 0,3,6,9 will show Normal (0)\n  // IDs ending with 1,4,7 will show Moderate Risk (1)\n  // IDs ending with 2,5,8 will show High Risk (2)\n  const lastDigit = idNum % 10;\n  if (lastDigit === 1 || lastDigit === 4 || lastDigit === 7) {\n    return 1; // Moderate Risk\n  } else if (lastDigit === 2 || lastDigit === 5 || lastDigit === 8) {\n    return 2; // High Risk\n  } else {\n    return 0; // Normal\n  }\n};\nconst Dashboard = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [darkMode, setDarkMode] = useState(localStorage.getItem('theme') === 'dark');\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [patients, setPatients] = useState([]);\n  const [doctor, setDoctor] = useState(null);\n  const hospitalName = \"MediCare General Hospital\";\n\n  // Dark mode effect\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    localStorage.setItem('theme', darkMode ? 'dark' : 'light');\n  }, [darkMode]);\n\n  // Clock effect - separated from other state updates\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Data fetching effect\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const patientsData = await response.json();\n\n        // Add simulated alert levels to patients for demo purposes\n        const patientsWithAlerts = patientsData.map(patient => ({\n          ...patient,\n          alertLevel: getSimulatedAlertLevel(patient.unique_id),\n          alertStatus: getAlertStatusText(getSimulatedAlertLevel(patient.unique_id))\n        }));\n        console.log('Fetched patients:', patientsWithAlerts); // Debug log\n        setPatients(patientsWithAlerts);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Get alert status text from alert level\n  const getAlertStatusText = alertLevel => {\n    switch (alertLevel) {\n      case 1:\n        return \"Moderate Risk\";\n      case 2:\n        return \"High Risk\";\n      default:\n        return \"Normal\";\n    }\n  };\n\n  // Memoize functions and values that don't need to change on every render\n  const getStatusColor = useMemo(() => (status, alertLevel) => {\n    // If alert level is provided, it takes precedence\n    if (alertLevel !== undefined) {\n      switch (alertLevel) {\n        case 2:\n          return 'status-critical';\n        case 1:\n          return 'status-attention';\n        case 0:\n          return 'status-normal';\n        default:\n          return '';\n      }\n    }\n\n    // Fall back to regular status if alert level not available\n    switch (status) {\n      case 'critical':\n        return 'status-critical';\n      case 'needs attention':\n        return 'status-attention';\n      case 'normal':\n        return 'status-normal';\n      default:\n        return '';\n    }\n  }, []);\n  const formatDate = useMemo(() => date => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }, []);\n  const HomePage = () => {\n    _s();\n    const navigate = useNavigate();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Patient Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-patient-btn\",\n            onClick: () => navigate('/add-patient'),\n            children: \"Add New Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patients-grid\",\n        children: patients.length > 0 ? patients.map(patient => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/patient/${patient.unique_id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `patient-card ${getStatusColor(patient.status, patient.alertLevel)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: patient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ID: \", patient.unique_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"status\",\n              children: [\"Status: \", patient.alertStatus || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), patient.alertLevel > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `alert-badge ${patient.alertLevel === 2 ? 'high-risk' : 'moderate-risk'}`,\n              children: patient.alertLevel === 1 ? 'MODERATE RISK' : 'HIGH RISK'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)\n        }, patient.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No patients found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  _s(HomePage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hospital-info\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hospitalName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), doctor && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-profile\",\n        children: [doctor.avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: doctor.avatar,\n          alt: \"Doctor\",\n          className: \"doctor-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctor-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: doctor.name || \"Doctor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: doctor.email_id || 'Email not specified'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ID: \", doctor.doc_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock-widget\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: currentTime.toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: formatDate(currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDarkMode(!darkMode),\n          children: darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-patient\",\n          element: /*#__PURE__*/_jsxDEV(AddPatientPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patient/:id\",\n          element: /*#__PURE__*/_jsxDEV(PatientDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s2(Dashboard, \"/8lDHcaFWO31Rt+6/6AIZdYN7Eo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Link","Routes","Route","useNavigate","PatientDetail","AddPatientPage","jsxDEV","_jsxDEV","Fragment","_Fragment","getSimulatedAlertLevel","patientId","idNum","parseInt","toString","lastDigit","Dashboard","_s2","_s","$RefreshSig$","darkMode","setDarkMode","localStorage","getItem","currentTime","setCurrentTime","Date","patients","setPatients","doctor","setDoctor","hospitalName","document","body","classList","toggle","setItem","timer","setInterval","clearInterval","fetchData","response","fetch","ok","Error","patientsData","json","patientsWithAlerts","map","patient","alertLevel","unique_id","alertStatus","getAlertStatusText","console","log","error","getStatusColor","status","undefined","formatDate","date","toLocaleDateString","weekday","year","month","day","HomePage","navigate","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","to","name","id","avatar","src","alt","email_id","doc_id","toLocaleTimeString","path","element","_c","$RefreshReg$"],"sources":["C:/Users/SAMARTH/OneDrive/Desktop/iot ujj/IoT-Main/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Link, Routes, Route, useNavigate } from 'react-router-dom';\r\nimport PatientDetail from './PatientDetail';\r\nimport AddPatientPage from './AddPatientPage';\r\nimport './Dashboard.css';\r\n\r\n// For demo purposes: Get a simulated alert level based on patient unique_id\r\nconst getSimulatedAlertLevel = (patientId) => {\r\n  // Convert ID to string then to number for consistency\r\n  const idNum = parseInt(patientId.toString());\r\n  \r\n  // Use modulo to get values 0, 1, 2\r\n  // IDs ending with 0,3,6,9 will show Normal (0)\r\n  // IDs ending with 1,4,7 will show Moderate Risk (1)\r\n  // IDs ending with 2,5,8 will show High Risk (2)\r\n  const lastDigit = idNum % 10;\r\n  \r\n  if (lastDigit === 1 || lastDigit === 4 || lastDigit === 7) {\r\n    return 1; // Moderate Risk\r\n  } else if (lastDigit === 2 || lastDigit === 5 || lastDigit === 8) {\r\n    return 2; // High Risk\r\n  } else {\r\n    return 0; // Normal\r\n  }\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [darkMode, setDarkMode] = useState(localStorage.getItem('theme') === 'dark');\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctor, setDoctor] = useState(null);\r\n  const hospitalName = \"MediCare General Hospital\";\r\n\r\n  // Dark mode effect\r\n  useEffect(() => {\r\n    document.body.classList.toggle('dark-mode', darkMode);\r\n    localStorage.setItem('theme', darkMode ? 'dark' : 'light');\r\n  }, [darkMode]);\r\n\r\n  // Clock effect - separated from other state updates\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Data fetching effect\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n\r\n        const patientsData = await response.json();\r\n        \r\n        // Add simulated alert levels to patients for demo purposes\r\n        const patientsWithAlerts = patientsData.map(patient => ({\r\n          ...patient,\r\n          alertLevel: getSimulatedAlertLevel(patient.unique_id),\r\n          alertStatus: getAlertStatusText(getSimulatedAlertLevel(patient.unique_id))\r\n        }));\r\n        \r\n        console.log('Fetched patients:', patientsWithAlerts); // Debug log\r\n        setPatients(patientsWithAlerts);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  // Get alert status text from alert level\r\n  const getAlertStatusText = (alertLevel) => {\r\n    switch(alertLevel) {\r\n      case 1: return \"Moderate Risk\";\r\n      case 2: return \"High Risk\";\r\n      default: return \"Normal\";\r\n    }\r\n  };\r\n\r\n  // Memoize functions and values that don't need to change on every render\r\n  const getStatusColor = useMemo(() => (status, alertLevel) => {\r\n    // If alert level is provided, it takes precedence\r\n    if (alertLevel !== undefined) {\r\n      switch(alertLevel) {\r\n        case 2: return 'status-critical';\r\n        case 1: return 'status-attention';\r\n        case 0: return 'status-normal';\r\n        default: return '';\r\n      }\r\n    }\r\n    \r\n    // Fall back to regular status if alert level not available\r\n    switch(status) {\r\n      case 'critical': return 'status-critical';\r\n      case 'needs attention': return 'status-attention';\r\n      case 'normal': return 'status-normal';\r\n      default: return '';\r\n    }\r\n  }, []);\r\n\r\n  const formatDate = useMemo(() => (date) => {\r\n    return date.toLocaleDateString('en-US', {\r\n      weekday: 'long', \r\n      year: 'numeric', \r\n      month: 'long', \r\n      day: 'numeric' \r\n    });\r\n  }, []);\r\n\r\n  const HomePage = () => {\r\n    const navigate = useNavigate();\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"dashboard-header\">\r\n          <div className=\"header-content\">\r\n            <h2>Patient Dashboard</h2>\r\n            <button \r\n              className=\"add-patient-btn\"\r\n              onClick={() => navigate('/add-patient')}\r\n            >\r\n              Add New Patient\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"patients-grid\">\r\n          {patients.length > 0 ? (\r\n            patients.map(patient => (\r\n              <Link to={`/patient/${patient.unique_id}`} key={patient.id}>\r\n                <div className={`patient-card ${getStatusColor(patient.status, patient.alertLevel)}`}>\r\n                  <h3>{patient.name}</h3>\r\n                  <p>ID: {patient.unique_id}</p>\r\n                  <p className=\"status\">Status: {patient.alertStatus || 'N/A'}</p>\r\n                  {patient.alertLevel > 0 && (\r\n                    <div className={`alert-badge ${patient.alertLevel === 2 ? 'high-risk' : 'moderate-risk'}`}>\r\n                      {patient.alertLevel === 1 ? 'MODERATE RISK' : 'HIGH RISK'}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Link>\r\n            ))\r\n          ) : (\r\n            <p>No patients found</p>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <aside className=\"sidebar\">\r\n        <div className=\"hospital-info\">\r\n          <h1>{hospitalName}</h1>\r\n        </div>\r\n        \r\n        {doctor && (\r\n          <div className=\"doctor-profile\">\r\n            {doctor.avatar && <img src={doctor.avatar} alt=\"Doctor\" className=\"doctor-avatar\" />}\r\n            <div className=\"doctor-details\">\r\n              <h2>{doctor.name || \"Doctor Name\"}</h2>\r\n              <p>{doctor.email_id || 'Email not specified'}</p>\r\n              <p>ID: {doctor.doc_id}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"clock-widget\">\r\n          <div className=\"time\">{currentTime.toLocaleTimeString()}</div>\r\n          <div className=\"date\">{formatDate(currentTime)}</div>\r\n        </div>\r\n        \r\n        <div className=\"theme-toggle\">\r\n          <button onClick={() => setDarkMode(!darkMode)}>\r\n            {darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\r\n          </button>\r\n        </div>\r\n      </aside>\r\n      \r\n      <main className=\"main-content\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage />} />\r\n          <Route path=\"/add-patient\" element={<AddPatientPage />} />\r\n          <Route path=\"/patient/:id\" element={<PatientDetail />} />\r\n        </Routes>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}