{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMARTH\\\\OneDrive\\\\Desktop\\\\iot 3\\\\IoT-Main\\\\frontend\\\\src\\\\components\\\\PatientDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { getPatientVitals, downloadThingSpeakDataAsCSV, fetchHistoricalData } from '../services/ThingSpeakService';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns'; // Add this import for time scale\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport 'leaflet/dist/leaflet.css';\nimport './PatientDetail.css';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nconst PatientDetail = () => {\n  _s();\n  var _historicalData$times, _historicalData$heart, _historicalData$bp;\n  const {\n    id\n  } = useParams();\n  const [patientData, setPatientData] = useState(null);\n  const [patientDetails, setPatientDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [manualAlertLevel, setManualAlertLevel] = useState(null);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [historicalData, setHistoricalData] = useState(null);\n  const [loadingHistorical, setLoadingHistorical] = useState(true);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n\n  // ECG Chart configuration\n  const ecgChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'ECG Waveform'\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Sample'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'mV'\n        }\n      }\n    },\n    animation: false // Disable animation for better performance\n  };\n  const prepareEcgChartData = samples => ({\n    labels: samples.map((_, index) => index),\n    datasets: [{\n      label: 'ECG',\n      data: samples,\n      borderColor: 'rgb(75, 192, 192)',\n      borderWidth: 1,\n      pointRadius: 0,\n      tension: 0.1\n    }]\n  });\n\n  // Fetch patient details from backend\n  useEffect(() => {\n    const fetchPatientDetails = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/');\n        if (!response.ok) {\n          throw new Error('Failed to fetch patient details');\n        }\n        const patients = await response.json();\n        const currentPatient = patients.find(patient => patient.unique_id.toString() === id.toString());\n        if (currentPatient) {\n          setPatientDetails(currentPatient);\n        } else {\n          console.warn(`Patient with ID ${id} not found in patients list`);\n        }\n      } catch (error) {\n        console.error(\"Error fetching patient details:\", error);\n      }\n    };\n    fetchPatientDetails();\n  }, [id]);\n  const fetchVitals = useCallback(async () => {\n    if (!id) return;\n    try {\n      const vitalsData = await getPatientVitals(id);\n      setPatientData(prev => ({\n        ...prev,\n        ...vitalsData\n      }));\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching vitals:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    fetchVitals();\n    const interval = setInterval(fetchVitals, 30000);\n    return () => clearInterval(interval);\n  }, [fetchVitals]);\n\n  // Function to handle manual alert setting\n  const handleSetAlert = level => {\n    if (manualAlertLevel === level) {\n      // If clicking the same level again, clear the alert\n      setManualAlertLevel(null);\n    } else {\n      // Set to the selected level\n      setManualAlertLevel(level);\n    }\n  };\n\n  // Handle CSV download\n  const handleDownloadCSV = async () => {\n    if (!id) return;\n    try {\n      setIsDownloading(true);\n      await downloadThingSpeakDataAsCSV(id, `patient_${id}_data_${new Date().toISOString().slice(0, 10)}.csv`, 7 // Get 7 days of data\n      );\n      setIsDownloading(false);\n    } catch (error) {\n      console.error('Error downloading CSV data:', error);\n      setIsDownloading(false);\n    }\n  };\n\n  // Fetch historical data\n  useEffect(() => {\n    const getHistoricalData = async () => {\n      if (!id) return;\n      try {\n        setLoadingHistorical(true);\n        const data = await fetchHistoricalData(id, 7); // Get 7 days of data\n        setHistoricalData(data.formatted);\n        setLoadingHistorical(false);\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n        setLoadingHistorical(false);\n      }\n    };\n    getHistoricalData();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading patient data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Error loading patient data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 79\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 21\n  }, this);\n  if (!patientData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: \"No patient data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 28\n  }, this);\n\n  // Helper function to determine temperature status\n  const getTemperatureStatus = temp => {\n    if (temp > 37.8) return 'elevated';\n    if (temp < 35.5) return 'low';\n    return 'normal';\n  };\n\n  // Helper function to determine heart rate status\n  const getHeartRateStatus = hr => {\n    if (hr > 100) return 'elevated';\n    if (hr < 60) return 'low';\n    return 'normal';\n  };\n\n  // Helper function to get alert style class\n  const getAlertClass = alertLevel => {\n    switch (alertLevel) {\n      case 0:\n        return 'normal';\n      case 1:\n        return 'moderate-risk';\n      case 2:\n        return 'high-risk';\n      default:\n        return 'normal';\n    }\n  };\n\n  // Function to get patient initials for avatar\n  const getInitials = name => {\n    if (!name) return \"P\";\n    return name.split(' ').map(part => part[0]).join('').toUpperCase().substring(0, 2);\n  };\n\n  // Determine effective alert level (manual override or data-driven)\n  const effectiveAlertLevel = manualAlertLevel !== null ? manualAlertLevel : patientData.vitals.alertLevel;\n  const alertStatusText = effectiveAlertLevel === 0 ? \"Normal\" : effectiveAlertLevel === 1 ? \"Moderate Risk\" : \"High Risk\";\n\n  // Chart options for historical data\n  const getHistoricalChartOptions = (title, yAxisLabel, color) => {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      interaction: {\n        mode: 'index',\n        intersect: false\n      },\n      plugins: {\n        legend: {\n          display: false,\n          labels: {\n            font: {\n              size: 8\n            }\n          }\n        },\n        title: {\n          display: false,\n          text: title,\n          color: 'rgb(100, 100, 100)',\n          font: {\n            size: 9\n          },\n          padding: {\n            top: 0,\n            bottom: 2\n          }\n        },\n        tooltip: {\n          enabled: true,\n          titleFont: {\n            size: 9\n          },\n          bodyFont: {\n            size: 9\n          },\n          titleMarginBottom: 2,\n          padding: {\n            top: 4,\n            bottom: 4,\n            left: 6,\n            right: 6\n          },\n          callbacks: {\n            title: tooltipItems => {\n              const date = new Date(tooltipItems[0].parsed.x);\n              return date.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              });\n            }\n          }\n        }\n      },\n      scales: {\n        x: {\n          type: 'time',\n          time: {\n            unit: 'minute',\n            displayFormats: {\n              minute: 'HH:mm'\n            },\n            tooltipFormat: 'HH:mm'\n          },\n          title: {\n            display: false\n          },\n          ticks: {\n            maxRotation: 0,\n            autoSkip: true,\n            maxTicksLimit: 4,\n            font: {\n              size: 7\n            },\n            padding: 0\n          },\n          grid: {\n            display: false\n          },\n          border: {\n            display: false\n          }\n        },\n        y: {\n          title: {\n            display: false\n          },\n          beginAtZero: false,\n          ticks: {\n            font: {\n              size: 7\n            },\n            maxTicksLimit: 3,\n            padding: 0\n          },\n          grid: {\n            color: 'rgba(0, 0, 0, 0.03)',\n            lineWidth: 0.5,\n            drawBorder: false\n          },\n          border: {\n            display: false\n          }\n        }\n      },\n      layout: {\n        padding: {\n          left: 0,\n          right: 0,\n          top: 2,\n          bottom: 0\n        }\n      },\n      elements: {\n        line: {\n          tension: 0.2,\n          borderWidth: 1,\n          fill: false\n        },\n        point: {\n          radius: 0,\n          hoverRadius: 2\n        }\n      }\n    };\n  };\n\n  // Prepare datasets for historical charts\n  const prepareHistoricalChartData = (timestamps, values, label, color) => {\n    // Filter out null/NaN values and their corresponding timestamps\n    const validData = timestamps.map((time, index) => ({\n      time,\n      value: values[index]\n    })).filter(item => item.value !== undefined && !isNaN(item.value) && item.value !== null);\n\n    // Log data for debugging\n    console.log(`Chart data for ${label}:`, validData.length, 'valid data points');\n    return {\n      labels: validData.map(item => item.time),\n      datasets: [{\n        label: label,\n        data: validData.map(item => item.value),\n        borderColor: color,\n        backgroundColor: `${color}10`,\n        // Very light transparency\n        borderWidth: 1,\n        fill: false,\n        pointBorderWidth: 0\n      }]\n    };\n  };\n\n  // Handle BP data for chart\n  const prepareBPChartData = (timestamps, bpData) => {\n    // Filter out null/NaN values\n    const validData = timestamps.map((time, index) => {\n      var _bpData$index, _bpData$index2;\n      return {\n        time,\n        systolic: (_bpData$index = bpData[index]) === null || _bpData$index === void 0 ? void 0 : _bpData$index.systolic,\n        diastolic: (_bpData$index2 = bpData[index]) === null || _bpData$index2 === void 0 ? void 0 : _bpData$index2.diastolic\n      };\n    }).filter(item => item.systolic !== undefined && !isNaN(item.systolic) && item.systolic !== null && item.diastolic !== undefined && !isNaN(item.diastolic) && item.diastolic !== null);\n\n    // Log data for debugging\n    console.log('BP Chart data:', validData.length, 'valid data points');\n    return {\n      labels: validData.map(item => item.time),\n      datasets: [{\n        label: 'Systolic',\n        data: validData.map(item => item.systolic),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0)',\n        borderWidth: 1,\n        fill: false,\n        pointBorderWidth: 0\n      }, {\n        label: 'Diastolic',\n        data: validData.map(item => item.diastolic),\n        borderColor: 'rgb(54, 162, 235)',\n        backgroundColor: 'rgba(54, 162, 235, 0)',\n        borderWidth: 1,\n        fill: false,\n        pointBorderWidth: 0\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-detail\",\n    children: [effectiveAlertLevel > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `emergency-alert ${getAlertClass(effectiveAlertLevel)}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: effectiveAlertLevel === 1 ? 'MODERATE RISK ALERT' : 'HIGH RISK ALERT'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: effectiveAlertLevel === 1 ? 'Patient shows moderate risk signs. Monitor carefully.' : 'EMERGENCY! Patient shows high risk signs. Immediate attention required!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this), manualAlertLevel !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manual-alert-indicator\",\n        children: \"Manually set by doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-info-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient-info-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"initials\",\n            children: patientDetails ? getInitials(patientDetails.name) : \"P\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-basic-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: patientDetails ? patientDetails.name : `Patient #${id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: \"Patient ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value\",\n                children: patientDetails ? patientDetails.unique_id : id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value\",\n                children: patientDetails ? `${patientDetails.age} years` : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value\",\n                children: patientDetails ? patientDetails.phone_number : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `value status ${effectiveAlertLevel > 0 ? effectiveAlertLevel === 1 ? 'warning' : 'critical' : 'normal'}`,\n                children: alertStatusText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manual-alert-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manual Alert Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `alert-btn moderate-risk ${manualAlertLevel === 1 ? 'active' : ''}`,\n          onClick: () => handleSetAlert(1),\n          children: \"Set Moderate Risk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `alert-btn high-risk ${manualAlertLevel === 2 ? 'active' : ''}`,\n          onClick: () => handleSetAlert(2),\n          children: \"Set High Risk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), manualAlertLevel !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"alert-btn clear\",\n          onClick: () => setManualAlertLevel(null),\n          children: \"Clear Alert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"alert-info\",\n        children: \"Use these buttons to manually set an alert level if you observe concerning symptoms not detected by sensors.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vital-signs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vital-signs-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vital Signs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `download-csv-btn ${isDownloading ? 'loading' : ''}`,\n          onClick: handleDownloadCSV,\n          disabled: isDownloading,\n          children: isDownloading ? 'Downloading...' : 'Download Historical Data (CSV)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vitals-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `value ${getTemperatureStatus(patientData.vitals.temperature)}`,\n            children: [patientData.vitals.temperature, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Emergency Alert Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `value ${getAlertClass(effectiveAlertLevel)}`,\n            children: [alertStatusText, manualAlertLevel !== null && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"manual-indicator\",\n              children: \" (Manual)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Heart Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `value ${getHeartRateStatus(patientData.vitals.heartRate)}`,\n            children: [patientData.vitals.heartRate, \" BPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"SpO2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `value ${patientData.vitals.spo2 < 95 ? 'low' : 'normal'}`,\n            children: [patientData.vitals.spo2, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Blood Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `value ${patientData.status.bp}`,\n            children: [patientData.vitals.bp.systolic, \"/\", patientData.vitals.bp.diastolic, \" mmHg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Average ECG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: [typeof patientData.vitals.avgEcg === 'number' ? patientData.vitals.avgEcg.toFixed(2) : patientData.vitals.avgEcg, \" mV\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), patientData.location.lat && patientData.location.lng && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vital-card location-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Lat: \", patientData.location.lat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Long: \", patientData.location.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ecg-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ECG Waveform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ecg-chart-container\",\n        children: patientData.vitals.ecgSamples.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n          options: ecgChartOptions,\n          data: prepareEcgChartData(patientData.vitals.ecgSamples)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No ECG data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weekly-records-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recent Records (Latest 10 readings)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-debug-btn\",\n          onClick: () => setShowDebugInfo(!showDebugInfo),\n          children: showDebugInfo ? 'Hide Debug Info' : 'Show Debug Info'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), loadingHistorical ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-section\",\n        children: \"Loading historical data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, this) : !historicalData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-section\",\n        children: \"No historical data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"historical-charts-container\",\n        children: [showDebugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"debug-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Data: \", ((_historicalData$times = historicalData.timestamps) === null || _historicalData$times === void 0 ? void 0 : _historicalData$times.length) || 0, \" pts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"HR: \", ((_historicalData$heart = historicalData.heartRate) === null || _historicalData$heart === void 0 ? void 0 : _historicalData$heart.filter(v => v !== null).length) || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"BP: \", ((_historicalData$bp = historicalData.bp) === null || _historicalData$bp === void 0 ? void 0 : _historicalData$bp.filter(v => v.systolic !== null).length) || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"historical-charts-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Heart Rate (BPM)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              options: getHistoricalChartOptions('', 'BPM', 'rgb(54, 162, 235)'),\n              data: prepareHistoricalChartData(historicalData.timestamps, historicalData.heartRate, 'Heart Rate', 'rgb(54, 162, 235)')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Blood Pressure (mmHg)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              options: {\n                ...getHistoricalChartOptions('', 'mmHg', 'rgb(153, 102, 255)'),\n                plugins: {\n                  ...getHistoricalChartOptions('', 'mmHg', 'rgb(153, 102, 255)').plugins,\n                  legend: {\n                    display: true,\n                    position: 'top',\n                    align: 'center',\n                    labels: {\n                      boxWidth: 5,\n                      padding: 2,\n                      font: {\n                        size: 7\n                      }\n                    }\n                  }\n                }\n              },\n              data: prepareBPChartData(historicalData.timestamps, historicalData.bp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this), patientData.location.lat && patientData.location.lng && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [patientData.location.lat, patientData.location.lng],\n          zoom: 13,\n          style: {\n            height: '400px',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [patientData.location.lat, patientData.location.lng],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [\"Patient's Location\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 37\n              }, this), \"Lat: \", patientData.location.lat, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 50\n              }, this), \"Long: \", patientData.location.lng]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Updated: \", patientData.lastUpdated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientDetail, \"K+ex/f3Ls2C86PXCArYuJ7u/ybo=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetail;\nexport default PatientDetail;\nvar _c;\n$RefreshReg$(_c, \"PatientDetail\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","Line","MapContainer","TileLayer","Marker","Popup","getPatientVitals","downloadThingSpeakDataAsCSV","fetchHistoricalData","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","L","icon","iconShadow","jsxDEV","_jsxDEV","register","DefaultIcon","iconUrl","shadowUrl","iconSize","iconAnchor","prototype","options","PatientDetail","_s","_historicalData$times","_historicalData$heart","_historicalData$bp","id","patientData","setPatientData","patientDetails","setPatientDetails","loading","setLoading","error","setError","manualAlertLevel","setManualAlertLevel","isDownloading","setIsDownloading","historicalData","setHistoricalData","loadingHistorical","setLoadingHistorical","showDebugInfo","setShowDebugInfo","ecgChartOptions","responsive","plugins","legend","display","title","text","scales","x","y","animation","prepareEcgChartData","samples","labels","map","_","index","datasets","label","data","borderColor","borderWidth","pointRadius","tension","fetchPatientDetails","response","fetch","ok","Error","patients","json","currentPatient","find","patient","unique_id","toString","console","warn","fetchVitals","vitalsData","prev","message","interval","setInterval","clearInterval","handleSetAlert","level","handleDownloadCSV","Date","toISOString","slice","getHistoricalData","formatted","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getTemperatureStatus","temp","getHeartRateStatus","hr","getAlertClass","alertLevel","getInitials","name","split","part","join","toUpperCase","substring","effectiveAlertLevel","vitals","alertStatusText","getHistoricalChartOptions","yAxisLabel","color","maintainAspectRatio","interaction","mode","intersect","font","size","padding","top","bottom","tooltip","enabled","titleFont","bodyFont","titleMarginBottom","left","right","callbacks","tooltipItems","date","parsed","toLocaleTimeString","hour","minute","type","time","unit","displayFormats","tooltipFormat","ticks","maxRotation","autoSkip","maxTicksLimit","grid","border","beginAtZero","lineWidth","drawBorder","layout","elements","line","fill","point","radius","hoverRadius","prepareHistoricalChartData","timestamps","values","validData","value","filter","item","undefined","isNaN","log","length","backgroundColor","pointBorderWidth","prepareBPChartData","bpData","_bpData$index","_bpData$index2","systolic","diastolic","age","phone_number","onClick","disabled","temperature","heartRate","spo2","status","bp","avgEcg","toFixed","location","lat","lng","ecgSamples","v","position","align","boxWidth","center","zoom","style","height","width","url","attribution","lastUpdated","_c","$RefreshReg$"],"sources":["C:/Users/SAMARTH/OneDrive/Desktop/iot 3/IoT-Main/frontend/src/components/PatientDetail.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { getPatientVitals, downloadThingSpeakDataAsCSV, fetchHistoricalData } from '../services/ThingSpeakService';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale\r\n} from 'chart.js';\r\nimport 'chartjs-adapter-date-fns'; // Add this import for time scale\r\nimport L from 'leaflet';\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './PatientDetail.css';\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale\r\n);\r\n\r\nconst DefaultIcon = L.icon({\r\n  iconUrl: icon,\r\n  shadowUrl: iconShadow,\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41]\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nconst PatientDetail = () => {\r\n  const { id } = useParams();\r\n  const [patientData, setPatientData] = useState(null);\r\n  const [patientDetails, setPatientDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [manualAlertLevel, setManualAlertLevel] = useState(null);\r\n  const [isDownloading, setIsDownloading] = useState(false);\r\n  const [historicalData, setHistoricalData] = useState(null);\r\n  const [loadingHistorical, setLoadingHistorical] = useState(true);\r\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\r\n\r\n  // ECG Chart configuration\r\n  const ecgChartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'ECG Waveform'\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Sample'\r\n        }\r\n      },\r\n      y: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'mV'\r\n        }\r\n      }\r\n    },\r\n    animation: false // Disable animation for better performance\r\n  };\r\n\r\n  const prepareEcgChartData = (samples) => ({\r\n    labels: samples.map((_, index) => index),\r\n    datasets: [\r\n      {\r\n        label: 'ECG',\r\n        data: samples,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        borderWidth: 1,\r\n        pointRadius: 0,\r\n        tension: 0.1\r\n      }\r\n    ]\r\n  });\r\n\r\n  // Fetch patient details from backend\r\n  useEffect(() => {\r\n    const fetchPatientDetails = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch patient details');\r\n        }\r\n        \r\n        const patients = await response.json();\r\n        const currentPatient = patients.find(patient => patient.unique_id.toString() === id.toString());\r\n        \r\n        if (currentPatient) {\r\n          setPatientDetails(currentPatient);\r\n        } else {\r\n          console.warn(`Patient with ID ${id} not found in patients list`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching patient details:\", error);\r\n      }\r\n    };\r\n    \r\n    fetchPatientDetails();\r\n  }, [id]);\r\n\r\n  const fetchVitals = useCallback(async () => {\r\n    if (!id) return;\r\n\r\n    try {\r\n      const vitalsData = await getPatientVitals(id);\r\n      setPatientData(prev => ({\r\n        ...prev,\r\n        ...vitalsData\r\n      }));\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching vitals:', error);\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    fetchVitals();\r\n    const interval = setInterval(fetchVitals, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchVitals]);\r\n\r\n  // Function to handle manual alert setting\r\n  const handleSetAlert = (level) => {\r\n    if (manualAlertLevel === level) {\r\n      // If clicking the same level again, clear the alert\r\n      setManualAlertLevel(null);\r\n    } else {\r\n      // Set to the selected level\r\n      setManualAlertLevel(level);\r\n    }\r\n  };\r\n\r\n  // Handle CSV download\r\n  const handleDownloadCSV = async () => {\r\n    if (!id) return;\r\n    \r\n    try {\r\n      setIsDownloading(true);\r\n      await downloadThingSpeakDataAsCSV(\r\n        id, \r\n        `patient_${id}_data_${new Date().toISOString().slice(0,10)}.csv`, \r\n        7  // Get 7 days of data\r\n      );\r\n      setIsDownloading(false);\r\n    } catch (error) {\r\n      console.error('Error downloading CSV data:', error);\r\n      setIsDownloading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch historical data\r\n  useEffect(() => {\r\n    const getHistoricalData = async () => {\r\n      if (!id) return;\r\n\r\n      try {\r\n        setLoadingHistorical(true);\r\n        const data = await fetchHistoricalData(id, 7); // Get 7 days of data\r\n        setHistoricalData(data.formatted);\r\n        setLoadingHistorical(false);\r\n      } catch (error) {\r\n        console.error('Error fetching historical data:', error);\r\n        setLoadingHistorical(false);\r\n      }\r\n    };\r\n\r\n    getHistoricalData();\r\n  }, [id]);\r\n\r\n  if (loading) return <div className=\"loading\">Loading patient data...</div>;\r\n  if (error) return <div className=\"error\"><h3>Error loading patient data</h3><p>{error}</p></div>;\r\n  if (!patientData) return <div className=\"error\">No patient data available</div>;\r\n\r\n  // Helper function to determine temperature status\r\n  const getTemperatureStatus = (temp) => {\r\n    if (temp > 37.8) return 'elevated';\r\n    if (temp < 35.5) return 'low';\r\n    return 'normal';\r\n  };\r\n\r\n  // Helper function to determine heart rate status\r\n  const getHeartRateStatus = (hr) => {\r\n    if (hr > 100) return 'elevated';\r\n    if (hr < 60) return 'low';\r\n    return 'normal';\r\n  };\r\n\r\n  // Helper function to get alert style class\r\n  const getAlertClass = (alertLevel) => {\r\n    switch(alertLevel) {\r\n      case 0: return 'normal';\r\n      case 1: return 'moderate-risk';\r\n      case 2: return 'high-risk';\r\n      default: return 'normal';\r\n    }\r\n  };\r\n\r\n  // Function to get patient initials for avatar\r\n  const getInitials = (name) => {\r\n    if (!name) return \"P\";\r\n    return name\r\n      .split(' ')\r\n      .map(part => part[0])\r\n      .join('')\r\n      .toUpperCase()\r\n      .substring(0, 2);\r\n  };\r\n\r\n  // Determine effective alert level (manual override or data-driven)\r\n  const effectiveAlertLevel = manualAlertLevel !== null ? manualAlertLevel : patientData.vitals.alertLevel;\r\n  const alertStatusText = effectiveAlertLevel === 0 ? \"Normal\" : \r\n                          effectiveAlertLevel === 1 ? \"Moderate Risk\" : \"High Risk\";\r\n\r\n  // Chart options for historical data\r\n  const getHistoricalChartOptions = (title, yAxisLabel, color) => {\r\n    return {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      interaction: {\r\n        mode: 'index',\r\n        intersect: false,\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n          labels: {\r\n            font: {\r\n              size: 8\r\n            }\r\n          }\r\n        },\r\n        title: {\r\n          display: false,\r\n          text: title,\r\n          color: 'rgb(100, 100, 100)',\r\n          font: {\r\n            size: 9,\r\n          },\r\n          padding: {\r\n            top: 0,\r\n            bottom: 2\r\n          }\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n          titleFont: {\r\n            size: 9\r\n          },\r\n          bodyFont: {\r\n            size: 9\r\n          },\r\n          titleMarginBottom: 2,\r\n          padding: {\r\n            top: 4,\r\n            bottom: 4,\r\n            left: 6,\r\n            right: 6\r\n          },\r\n          callbacks: {\r\n            title: (tooltipItems) => {\r\n              const date = new Date(tooltipItems[0].parsed.x);\r\n              return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n            }\r\n          }\r\n        }\r\n      },\r\n      scales: {\r\n        x: {\r\n          type: 'time',\r\n          time: {\r\n            unit: 'minute',\r\n            displayFormats: {\r\n              minute: 'HH:mm'\r\n            },\r\n            tooltipFormat: 'HH:mm'\r\n          },\r\n          title: {\r\n            display: false\r\n          },\r\n          ticks: {\r\n            maxRotation: 0,\r\n            autoSkip: true,\r\n            maxTicksLimit: 4,\r\n            font: {\r\n              size: 7\r\n            },\r\n            padding: 0\r\n          },\r\n          grid: {\r\n            display: false\r\n          },\r\n          border: {\r\n            display: false\r\n          }\r\n        },\r\n        y: {\r\n          title: {\r\n            display: false\r\n          },\r\n          beginAtZero: false,\r\n          ticks: {\r\n            font: {\r\n              size: 7\r\n            },\r\n            maxTicksLimit: 3,\r\n            padding: 0\r\n          },\r\n          grid: {\r\n            color: 'rgba(0, 0, 0, 0.03)',\r\n            lineWidth: 0.5,\r\n            drawBorder: false\r\n          },\r\n          border: {\r\n            display: false\r\n          }\r\n        }\r\n      },\r\n      layout: {\r\n        padding: {\r\n          left: 0,\r\n          right: 0,\r\n          top: 2,\r\n          bottom: 0\r\n        }\r\n      },\r\n      elements: {\r\n        line: {\r\n          tension: 0.2,\r\n          borderWidth: 1,\r\n          fill: false\r\n        },\r\n        point: {\r\n          radius: 0,\r\n          hoverRadius: 2,\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n  // Prepare datasets for historical charts\r\n  const prepareHistoricalChartData = (timestamps, values, label, color) => {\r\n    // Filter out null/NaN values and their corresponding timestamps\r\n    const validData = timestamps.map((time, index) => ({\r\n      time,\r\n      value: values[index]\r\n    })).filter(item => item.value !== undefined && !isNaN(item.value) && item.value !== null);\r\n    \r\n    // Log data for debugging\r\n    console.log(`Chart data for ${label}:`, validData.length, 'valid data points');\r\n    \r\n    return {\r\n      labels: validData.map(item => item.time),\r\n      datasets: [\r\n        {\r\n          label: label,\r\n          data: validData.map(item => item.value),\r\n          borderColor: color,\r\n          backgroundColor: `${color}10`, // Very light transparency\r\n          borderWidth: 1,\r\n          fill: false,\r\n          pointBorderWidth: 0\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  // Handle BP data for chart\r\n  const prepareBPChartData = (timestamps, bpData) => {\r\n    // Filter out null/NaN values\r\n    const validData = timestamps.map((time, index) => ({\r\n      time,\r\n      systolic: bpData[index]?.systolic,\r\n      diastolic: bpData[index]?.diastolic\r\n    })).filter(item => \r\n      item.systolic !== undefined && !isNaN(item.systolic) && item.systolic !== null && \r\n      item.diastolic !== undefined && !isNaN(item.diastolic) && item.diastolic !== null\r\n    );\r\n    \r\n    // Log data for debugging\r\n    console.log('BP Chart data:', validData.length, 'valid data points');\r\n    \r\n    return {\r\n      labels: validData.map(item => item.time),\r\n      datasets: [\r\n        {\r\n          label: 'Systolic',\r\n          data: validData.map(item => item.systolic),\r\n          borderColor: 'rgb(255, 99, 132)',\r\n          backgroundColor: 'rgba(255, 99, 132, 0)',\r\n          borderWidth: 1,\r\n          fill: false,\r\n          pointBorderWidth: 0\r\n        },\r\n        {\r\n          label: 'Diastolic',\r\n          data: validData.map(item => item.diastolic),\r\n          borderColor: 'rgb(54, 162, 235)',\r\n          backgroundColor: 'rgba(54, 162, 235, 0)',\r\n          borderWidth: 1,\r\n          fill: false,\r\n          pointBorderWidth: 0\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"patient-detail\">\r\n      {effectiveAlertLevel > 0 && (\r\n        <div className={`emergency-alert ${getAlertClass(effectiveAlertLevel)}`}>\r\n          <h2>\r\n            {effectiveAlertLevel === 1 ? 'MODERATE RISK ALERT' : 'HIGH RISK ALERT'}\r\n          </h2>\r\n          <p>\r\n            {effectiveAlertLevel === 1 \r\n              ? 'Patient shows moderate risk signs. Monitor carefully.' \r\n              : 'EMERGENCY! Patient shows high risk signs. Immediate attention required!'}\r\n          </p>\r\n          {manualAlertLevel !== null && (\r\n            <div className=\"manual-alert-indicator\">Manually set by doctor</div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Patient Info Section */}\r\n      <div className=\"patient-info-section\">\r\n        <div className=\"patient-info-header\">\r\n          <div className=\"patient-avatar\">\r\n            <div className=\"initials\">{patientDetails ? getInitials(patientDetails.name) : \"P\"}</div>\r\n          </div>\r\n          <div className=\"patient-basic-info\">\r\n            <h1>{patientDetails ? patientDetails.name : `Patient #${id}`}</h1>\r\n            <div className=\"info-grid\">\r\n              <div className=\"info-item\">\r\n                <div className=\"label\">Patient ID</div>\r\n                <div className=\"value\">{patientDetails ? patientDetails.unique_id : id}</div>\r\n              </div>\r\n              <div className=\"info-item\">\r\n                <div className=\"label\">Age</div>\r\n                <div className=\"value\">{patientDetails ? `${patientDetails.age} years` : 'N/A'}</div>\r\n              </div>\r\n              <div className=\"info-item\">\r\n                <div className=\"label\">Phone</div>\r\n                <div className=\"value\">{patientDetails ? patientDetails.phone_number : 'N/A'}</div>\r\n              </div>\r\n              <div className=\"info-item\">\r\n                <div className=\"label\">Status</div>\r\n                <div className={`value status ${effectiveAlertLevel > 0 ? \r\n                  effectiveAlertLevel === 1 ? 'warning' : 'critical' : 'normal'}`}>\r\n                  {alertStatusText}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Manual Alert Controls */}\r\n      <div className=\"manual-alert-controls\">\r\n        <h3>Manual Alert Controls</h3>\r\n        <div className=\"alert-buttons\">\r\n          <button \r\n            className={`alert-btn moderate-risk ${manualAlertLevel === 1 ? 'active' : ''}`}\r\n            onClick={() => handleSetAlert(1)}\r\n          >\r\n            Set Moderate Risk\r\n          </button>\r\n          <button \r\n            className={`alert-btn high-risk ${manualAlertLevel === 2 ? 'active' : ''}`}\r\n            onClick={() => handleSetAlert(2)}\r\n          >\r\n            Set High Risk\r\n          </button>\r\n          {manualAlertLevel !== null && (\r\n            <button \r\n              className=\"alert-btn clear\"\r\n              onClick={() => setManualAlertLevel(null)}\r\n            >\r\n              Clear Alert\r\n            </button>\r\n          )}\r\n        </div>\r\n        <p className=\"alert-info\">\r\n          Use these buttons to manually set an alert level if you observe concerning symptoms not detected by sensors.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"vital-signs\">\r\n        <div className=\"vital-signs-header\">\r\n          <h2>Vital Signs</h2>\r\n          <button \r\n            className={`download-csv-btn ${isDownloading ? 'loading' : ''}`}\r\n            onClick={handleDownloadCSV}\r\n            disabled={isDownloading}\r\n          >\r\n            {isDownloading ? 'Downloading...' : 'Download Historical Data (CSV)'}\r\n          </button>\r\n        </div>\r\n        <div className=\"vitals-grid\">\r\n          <div className=\"vital-card\">\r\n            <h3>Temperature</h3>\r\n            <p className={`value ${getTemperatureStatus(patientData.vitals.temperature)}`}>\r\n              {patientData.vitals.temperature}°C\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"vital-card\">\r\n            <h3>Emergency Alert Status</h3>\r\n            <p className={`value ${getAlertClass(effectiveAlertLevel)}`}>\r\n              {alertStatusText}\r\n              {manualAlertLevel !== null && <span className=\"manual-indicator\"> (Manual)</span>}\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"vital-card\">\r\n            <h3>Heart Rate</h3>\r\n            <p className={`value ${getHeartRateStatus(patientData.vitals.heartRate)}`}>\r\n              {patientData.vitals.heartRate} BPM\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"vital-card\">\r\n            <h3>SpO2</h3>\r\n            <p className={`value ${patientData.vitals.spo2 < 95 ? 'low' : 'normal'}`}>\r\n              {patientData.vitals.spo2}%\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"vital-card\">\r\n            <h3>Blood Pressure</h3>\r\n            <p className={`value ${patientData.status.bp}`}>\r\n              {patientData.vitals.bp.systolic}/{patientData.vitals.bp.diastolic} mmHg\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"vital-card\">\r\n            <h3>Average ECG</h3>\r\n            <p className=\"value\">\r\n              {typeof patientData.vitals.avgEcg === 'number' \r\n                ? patientData.vitals.avgEcg.toFixed(2) \r\n                : patientData.vitals.avgEcg} mV\r\n            </p>\r\n          </div>\r\n\r\n          {patientData.location.lat && patientData.location.lng && (\r\n            <div className=\"vital-card location-card\">\r\n              <h3>Location</h3>\r\n              <p>Lat: {patientData.location.lat}</p>\r\n              <p>Long: {patientData.location.lng}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* ECG Graph Section */}\r\n      <div className=\"ecg-section\">\r\n        <h2>ECG Waveform</h2>\r\n        <div className=\"ecg-chart-container\">\r\n          {patientData.vitals.ecgSamples.length > 0 ? (\r\n            <Line\r\n              options={ecgChartOptions}\r\n              data={prepareEcgChartData(patientData.vitals.ecgSamples)}\r\n            />\r\n          ) : (\r\n            <p>No ECG data available</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Weekly Records Section */}\r\n      <div className=\"weekly-records-section\">\r\n        <div className=\"section-header\">\r\n          <h2>Recent Records (Latest 10 readings)</h2>\r\n          <button \r\n            className=\"toggle-debug-btn\"\r\n            onClick={() => setShowDebugInfo(!showDebugInfo)}\r\n          >\r\n            {showDebugInfo ? 'Hide Debug Info' : 'Show Debug Info'}\r\n          </button>\r\n        </div>\r\n        \r\n        {loadingHistorical ? (\r\n          <div className=\"loading-section\">Loading historical data...</div>\r\n        ) : !historicalData ? (\r\n          <div className=\"error-section\">No historical data available</div>\r\n        ) : (\r\n          <div className=\"historical-charts-container\">\r\n            {/* Debug info for troubleshooting */}\r\n            {showDebugInfo && (\r\n              <div className=\"debug-info\">\r\n                <p>Data: {historicalData.timestamps?.length || 0} pts</p>\r\n                <p>HR: {historicalData.heartRate?.filter(v => v !== null).length || 0}</p>\r\n                <p>BP: {historicalData.bp?.filter(v => v.systolic !== null).length || 0}</p>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"historical-charts-grid\">\r\n              {/* Heart Rate Chart */}\r\n              <div className=\"chart-container\">\r\n                <h3>Heart Rate (BPM)</h3>\r\n                <Line \r\n                  options={getHistoricalChartOptions('', 'BPM', 'rgb(54, 162, 235)')}\r\n                  data={prepareHistoricalChartData(\r\n                    historicalData.timestamps, \r\n                    historicalData.heartRate, \r\n                    'Heart Rate',\r\n                    'rgb(54, 162, 235)'\r\n                  )}\r\n                />\r\n              </div>\r\n              \r\n              {/* Blood Pressure Chart */}\r\n              <div className=\"chart-container\">\r\n                <h3>Blood Pressure (mmHg)</h3>\r\n                <Line \r\n                  options={{\r\n                    ...getHistoricalChartOptions('', 'mmHg', 'rgb(153, 102, 255)'),\r\n                    plugins: {\r\n                      ...getHistoricalChartOptions('', 'mmHg', 'rgb(153, 102, 255)').plugins,\r\n                      legend: {\r\n                        display: true,\r\n                        position: 'top',\r\n                        align: 'center',\r\n                        labels: {\r\n                          boxWidth: 5,\r\n                          padding: 2,\r\n                          font: {\r\n                            size: 7\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }}\r\n                  data={prepareBPChartData(\r\n                    historicalData.timestamps, \r\n                    historicalData.bp\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      {patientData.location.lat && patientData.location.lng && (\r\n        <div className=\"map-section\">\r\n          <h2>Patient Location</h2>\r\n          <div className=\"map-container\">\r\n            <MapContainer\r\n              center={[patientData.location.lat, patientData.location.lng]}\r\n              zoom={13}\r\n              style={{ height: '400px', width: '100%' }}\r\n            >\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n              />\r\n              <Marker position={[patientData.location.lat, patientData.location.lng]}>\r\n                <Popup>\r\n                  Patient's Location<br />\r\n                  Lat: {patientData.location.lat}<br />\r\n                  Long: {patientData.location.lng}\r\n                </Popup>\r\n              </Marker>\r\n            </MapContainer>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"update-info\">\r\n        <p>Last Updated: {patientData.lastUpdated}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDetail;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}